<?php
// Echo Open software Copyright © 2012 KnowledgeWorks Foundation
// ECHO OPEN trademark and logo are trademarks of New Technology Network LLC
// The Echo Open software is licensed under the GNU GPLv2.  For licensing information // please contact New Technology Network Licensing at: // webmaster@newtechnetwork.org or 935 Clinton Street, Napa, CA 94559.

/*
 * Copyright © 2009 Shahbaz Ahmer <shahbaz.ahmer@parallelmode.com>
 *
 * $Id: ntlp_blocks.info 11 2009-12-20 03:15:00Z shahbaz.ahmer@parallelmode.com $
 *
 */

require_once("default_header.contents.inc");
module_load_include('inc', 'ntlp_agenda', 'agenda.contents');
module_load_include('inc', 'ntlp_events', 'events.contents');
require_once("mycourses.contents.inc");
require_once("activities.contents.inc");
require_once("grades.contents.inc");
require_once("projects.contents.inc");
require_once("resources.contents.inc");
require_once("courses_header.contents.inc");
require_once("people.contents.inc");
require_once("groups.contents.inc");
require_once("primary_links.contents.inc");
require_once("course_content_add.contents.inc");
module_load_include('inc', 'ntlp_school', 'timezone');

//require_once("extend_menu_trails.inc");
require_once("extend_forum.inc");


drupal_add_js(drupal_get_path('module', 'ntlp_blocks') . '/mycourses.js');
drupal_add_js(drupal_get_path('module', 'ntlp_school') . '/modalframe_setup.js');
modalframe_parent_js();

/**
 * Valid permissions for this module
 * @return array An array of valid permissions for the ntlp_blocks module
 */
//
//function ntlp_blocks_perm() {
//  return array('view NTLP: blocks');
//}
/**
 * Implementation of hook_menu().
 */
function ntlp_blocks_menu() {
    $items[] = array();

    $items['ntlp/blocks/changeschool/%'] = array(
        'title' => t('Changes current school of current user'),
        'page callback' => 'set_school',
        'page arguments' => array(3), //school_node_id
        'access arguments' => array('create ntlp_course content'),
        'type' => MENU_CALLBACK,
    );


    $items['ntlp/blocks/get_school_terms_combo/%'] = array(
        'title' => t('Get school term by its id.'),
        'page callback' => 'get_school_terms_combo',
        'page arguments' => array(3),
        'access arguments' => array('create ntlp_course content'),
        'type' => MENU_CALLBACK
    );

    $items['ntlp/blocks/get_teaching_content'] = array(
        'title' => t('Open teaching '),
        'page callback' => 'mycourses_block_pure',
        'access arguments' => array('create ntlp_course content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/blocks/taking_block_content'] = array(
        'title' => t('Open taking '),
        'page callback' => 'taking_block',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/people/search/%/%'] = array(
        'title' => t('Search people directory'),
        'page callback' => 'people_search',
        'page arguments' => array(3, 4), //Filter Org, Roles (comma delimitted)
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/courses/my'] = array(
        'title' => t('Courses '),
        'page callback' => 'course_navigator',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/courses/open'] = array(
        'title' => t('Courses '),
        'page callback' => 'ntlp_courses_open_frm',
        'access arguments' => array('my course block (Student)'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/grades'] = array(
        'title' => t('Grade '),
        'page callback' => 'grade_navigator',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/course/resources/filter/%'] = array(
        'title' => t('Course Resources Filter '),
        'page arguments' => array(4),
        'page callback' => 'ntlp_course_resources_filter',
        'access arguments' => array('create ntlp_course content'),
        'type' => MENU_CALLBACK,
    );
    $items['ntlp/courses/project/filter/%'] = array(
        'title' => t('Courses Project Filter '),
        'page arguments' => array(4),
        'page callback' => 'ntlp_courses_project_filter',
        'access arguments' => array('create ntlp_course content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/courses/school_year/selector/%/%'] = array(
        'page callback' => 'ntlp_courses_school_year_selector',
        'page arguments' => array(4, 5), //tab, school_year
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['repair/school/states'] = array(
        'page callback' => 'insert_states',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

//    $items['ntlp/courses/home/%'] = array(
//            'page callback' => 'course_home_navigate',
//            'page arguments' => array(3),
//            'access arguments' => array('access content'),
//            'type' => MENU_CALLBACK,
//    );

    $items['comment/add/single/%'] = array(
        'page callback' => 'comment_add_single',
        'page arguments' => array(3),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['comment/add/single/%'] = array(
        'page callback' => 'comment_add_single',
        'page arguments' => array(3),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/gradebook/student_view/%/%/%/%'] = array(
        'page callback' => 'render_course_student_grades',
//        'page callback' => 'get_gradebook_student_view',
        'page arguments' => array(3, 4, 5, 6),
        'access arguments' => array('grade submission'),
        'type' => MENU_CALLBACK,
    );

    $items['ntlp/gradebook/activities_view/%/%'] = array(
        'page callback' => 'get_gradebook_activities_view',
        'page arguments' => array(3, 4),
        'access arguments' => array('grade submission'),
        'type' => MENU_CALLBACK,
    );
    $items['ntlp/gradebook/grade/filter'] = array(
        'title' => t('GradeBook Grades Filter'),
        'page callback' => 'ntlp_gradebook_grade_filter',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $items['ntlp/gradebook/stugrade/filter'] = array(
        'title' => t('GradeBook Student Grades Filter'),
        'page callback' => 'ntlp_gradebook_stugrade_filter',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function ntlp_blocks_perm() {
    return array("my course block (Student)", "my course block (Parent)", "my course block (Teacher)",
        "my course block (Network Staff)", "allow access to contents of my kids", "view teching courses",
        "view all courses");
}

function ntlp_blocks_block($op = 'list', $delta = 0, $edit = array()) {
    // The $op parameter determines what piece of information is being requested.
    switch ($op) {
        case 'list':
            // If $op is "list", we just need to return a list of block descriptions.
            // This is used to provide a list of possible blocks to the administrator,
            // end users will not see these descriptions.
            $blocks[0] = array(
                'info' => t('NTLP: Course Agenda view block'),
            );
            $blocks[1] = array(
                'info' => t('NTLP: My Courses block'),
            );
            $blocks[2] = array(
                'info' => t('NTLP: Activities in a Course/Project'),
            );
            $blocks[3] = array(
                'info' => t('NTLP: Grades of all Students in a Course'),
            );
            $blocks[4] = array(
                'info' => t('NTLP: Grades for all Activities of a Student in a Course'),
            );
            $blocks[5] = array(
                'info' => t('NTLP: Scores for all Activities of a Student in a Course'),
            );
            $blocks[6] = array(
                'info' => t('NTLP: Course Projects'),
            );
            $blocks[7] = array(
                'info' => t('NTLP: Course Resources'),
            );
            $blocks[8] = array(
                'info' => t('NTLP: My Courses administration block'),
            );
            //In Alphanumeric because we wants this block to be visible in blocks list
            $blocks['ntlp_breadcrumbs_current_course'] = array(//9
                'info' => t('NTLP: Breadcrumbs for Current Course'),
            );
            $blocks[10] = array(
                'info' => t('NTLP: Course Announcements'),
            );
            $blocks[11] = array(
                'info' => t('NTLP: Events'),
            );
            $blocks[12] = array(
                'info' => t('NTLP: People Directory'),
            );
            $blocks[13] = array(
                'info' => t('NTLP: Events Block'),
            );
            $blocks[14] = array(
                'info' => t('NTLP: Groups Block'),
            );
            $blocks[15] = array(
                'info' => t('NTLP: Teacher Courses Tab - Courses I Teach'),
            );
            $blocks[16] = array(
                'info' => t('NTLP: My Courses Tab'),
            );
            $blocks[17] = array(
                'info' => t('NTLP: Teacher Courses Tab - Training Courses'),
            );
            $blocks[18] = array(
                'info' => t('NTLP: Teacher Courses Tab - All Courses'),
            );
            $blocks[19] = array(
                'info' => t('NTLP: View All Course Activity Notifications'),
            );
            $blocks[20] = array(
                'info' => t('NTLP: View All Active Projects'),
            );
            $blocks[21] = array(
                'info' => t('NTLP: View Upcoming Activities'),
            );
            $blocks[22] = array(
                'info' => t('NTLP: Courses Forum'),
            );
            $blocks[23] = array(
                'info' => t('NTLP: Courses Forum Node View'),
            );
            $blocks[24] = array(
                'info' => t('NTLP: Course Forum Topic Add'),
            );
            $blocks[25] = array(
                'info' => t('NTLP: Groups Forum'),
            );
            $blocks[26] = array(
                'info' => t('NTLP: Groups Forum Node View'),
            );
            $blocks[27] = array(
                'info' => t('NTLP: Groups Forum Topic Add'),
            );

            $blocks[28] = array(
                'info' => t('NTLP: Library Landing Page'),
            );

            $blocks[29] = array(
                'info' => t('NTLP: Features Home Page'),
            );

            $blocks[30] = array(
                'info' => t('NTLP: Search box Block'),
            );

            $blocks[31] = array(
                'info' => t('NTLP: Course Add Content Block'),
            );
            
            return $blocks;
        case 'configure':
            // If $op is "configure", we need to provide the administrator with a
            // configuration form. The $delta parameter tells us which block is being
            // configured. In this example, we'll allow the administrator to customize
            // the text of the first block.
            $form = array();
            /*      if ($delta == 0) {
              // All we need to provide is a text field, Drupal will take care of
              // the other block configuration options and the save button.
              $form['ntlp_blocks_string'] = array(
              '#type' => 'textfield',
              '#title' => t('Block contents'),
              '#size' => 60,
              '#description' => t('This string will appear in the example block.'),
              '#default_value' => variable_get('block_example_string',  t('Some example content.')),
              );
              } */
            return $form;
        case 'save':
        /*      // If $op is "save", we need to save settings from the configuration form.
          // Since the first block is the only one that allows configuration, we
          // need to check $delta to make sure we only save it.
          if ($delta == 0) {
          // Have Drupal save the string to the database.
          variable_set('block_example_string', $edit['block_example_string']);
          }
          return; */
        case 'view': default:
            // If $op is "view", then we need to generate the block for display
            // purposes. The $delta parameter tells us which block is being requested.
            if (!is_numeric($delta)) {
                switch ($delta) {
//            case 'ntlp_breadcrumbs_current_course':     //9
//              $block['subject'] = t('NTLP: Breadcrumbs for Current Course');
//              $block['content'] = coursebreadcrumb_block_contents();
//              break;
                }
            } else {
                switch ($delta) {
                    case 0:
                        // The subject is displayed at the top of the block. Note that it
                        // should be passed through t() for translation.
                        $block['subject'] = t('NTLP: Course Agenda view block');
                        $block['content'] = agenda_block_contents();
                        break;
                    case 1:
                        $block['subject'] = t('NTLP: My Courses block');
                        $block['content'] = mycourses_block_contents();
                        break;
                    case 2:
                        $block['subject'] = t('NTLP: Activities in a Course/Project');
                        $block['content'] = activities_block_contents();
                        break;
                    case 3:
                        $block['subject'] = t('NTLP: Grades all Students in a Course');
                        $block['content'] = grades_gsc_block_contents();
                        break;
                    case 4:
                        $block['subject'] = t('NTLP: Grades for all Activities of a Student in a Course');
                        $block['content'] = grades_gasc_block_contents('G');
                        break;
                    case 5:
                        $block['subject'] = t('NTLP: Points for all Activities of a Student in a Course');
                        $block['content'] = grades_gasc_block_contents('P');
                        break;
                    case 6:
                        $block['subject'] = t('NTLP: Course Projects');
                        $block['content'] = projects_block_contents();
                        break;
                    case 7:
                        $block['subject'] = t('NTLP: Course Resources');
                        $block['content'] = resources_block_contents();
                        break;
                    case 8:
                        $block['subject'] = t('NTLP: My Courses administration block');
                        $block['content'] = mycourses_block_contents(TRUE);
                        break;
                    case 10:
                        $block['subject'] = t('NTLP: Course Announcements');
                        $block['content'] = announcement_block_contents();
                        break;
                    case 11:
                        $block['subject'] = t('NTLP: Events');
                        $block['content'] = events_main();
                        break;
                    case 12:
                        $block['subject'] = t('NTLP: People Directory');
                        $block['content'] = people_block_contents();
                        break;
                    case 13:
                        $block['subject'] = t('NTLP: Events Block');
                        $block['content'] = recent_events_block_contents();
                        break;
                    case 14:
                        $block['subject'] = t('NTLP: Groups Block');
                        $block['content'] = recent_groups_block_contents();
                        break;
                    case 15:
                        $block['subject'] = t('NTLP: Teacher Courses Tab - Courses I Teach');
                        $block['content'] = '<div id="coursesTabsContentWrapper">' . get_teacher_courses_tab_content('teaching') . '</div>';
                        break;
                    case 16:
                        $block['subject'] = t('NTLP: My Courses Tab');
                        $block['content'] = ntlp_mycourses_tabs();
                        break;
                    case 17:
                        $block['subject'] = t('NTLP: Teacher Courses Tab - Training Courses');
                        $block['content'] = '<div id="coursesTabsContentWrapper">' . get_teacher_courses_tab_content('training') . '</div>';
                        break;
                    case 18:
                        $block['subject'] = t('NTLP: Teacher Courses Tab - All Courses');
                        $block['content'] = '<div id="coursesTabsContentWrapper">' . get_teacher_courses_tab_content('all') . '</div>';
                        break;
                    case 19:
                        $block['subject'] = t('NTLP: View All Course Activity Notifications');
                        $block['content'] = _view_user_all_activites();
                        break;
                    case 20:
                        $block['subject'] = t('NTLP: Active Projects');
                        $block['content'] = _view_all_active_projects();
                        break;
                    case 21:
                        $block['subject'] = t('NTLP: View Upcoming Activities');
                        $block['content'] = _view_upcoming_activities();
                        break;
                    case 22:
                        $block['subject'] = t('NTLP: Courses Forum');
                        $block['content'] = _ntlp_courses_forum();
                        break;
                    case 23:
                        $block['subject'] = t('NTLP: Courses Forum Node View');
                        $block['content'] = _ntlp_courses_forum_node_content();
                        break;
                    case 24:
                        $block['subject'] = t('NTLP: Course Forum Topic Add');
                        $block['content'] = _ntlp_course_forum_topic_add();
                        break;
                    case 25:
                        $block['subject'] = t('NTLP: Groups Forum');
                        $block['content'] = _ntlp_courses_forum(true);
                        break;
                    case 26:
                        $block['subject'] = t('NTLP: Groups Forum Node View');
                        $block['content'] = _ntlp_courses_forum_node_content(true);
                        break;
                    case 27:
                        $block['subject'] = t('NTLP: Groups Forum Topic Add');
                        $block['content'] = _ntlp_course_forum_topic_add(true);
                        break;

                    case 28:
                        $block['subject'] = t('NTLP: Library Landing Page');
                        $block['content'] = _ntlp_library_landing_page();
                        break;

                    case 29:
                        $block['subject'] = t('NTLP: Features Home Page');
                        $block['content'] = _ntlp_home_page_feature_content();
                        break;

                    case 30:
                        $block['subject'] = t('NTLP: Search box Block');
                        $block['content'] = search_block_contents();
                        break;

                    case 31:
                        $block['subject'] = t('NTLP: Course Add Content Block');
                        $block['content'] = course_add_contents();
                        break;
                    
                }
            }
            return $block;
    }
}

function _ntlp_home_page_feature_content() {
    include "features_home.inc";

    return $html_header . $html_custom . $html_footer;
}

/**
 * Implementation of hook_form_alter().
 *
 * Detect menutrails for non-node-view pages.
 * Custom support for NTLP menu paths
 * This hook is used to allow the called menus to render their output
 * If we use this function in hook_init than the parent node gets rendered.
 * @todo Replace TRUE with settings check.
 */

function course_navigator() {
    global $user;


    if (user_access('view teching courses') && user_access('view all courses')) {
        drupal_goto("ntlp/courses/teaching");
    } else {
        drupal_goto("ntlp/courses/training");
    }
}

function grade_navigator() {
    global $user;

    $user_id = $user->uid;

    if (isset($user->roles[NTLP_ROLEID_PARENT])) {
        $user_id = $_SESSION['PARENT_STUDENT_UID'];
    }
    if (user_access('view grades')) {

        drupal_goto("ntlp/grades/gradebook");
    } else {
        drupal_goto("ntlp/grades/student_snapshot/" . intval($user_id));
    }
}

###################################### FORUM FUNCTIONS START ##############################

function _ntlp_courses_forum($isGroups = false) {
    global $user;
    $course_nid = (int) arg(3);
    $output = '';

    set_item_url_handler('Discussion Main');
    $header = array(
        /* array('data' => 'Topic', 'field' => 'n.title'),
          array('data' => 'Replies', 'field' => 'l.comment_count'),
          array('data' => 'Created','field' => 'n.created' . 'n.uid'),
          array('data' => 'Last Post', 'field' => 'l.last_comment_timestamp'),
         *
         */
        array('data' => 'Topic', 'field' => 'title', 'width' => '41%', 'style' => 'padding-left: 25px;'),
        array('data' => 'Replies', 'field' => 'comment_count', 'align' => 'center', 'width' => '5%'),
        array('data' => 'Created', 'field' => 'created', 'width' => '27%'),
        array('data' => 'Last Post', 'field' => 'last_comment_timestamp', 'sort' => 'desc', 'width' => '27%'),
    );
    //$attributes = array('class' => 'ntlp_table', 'width' => '100%', 'cellpadding' => '8');
    $attributes = array('class' => 'ntlp_table', 'width' => '100%', 'cellpadding' => '8');
    $rows = array();

    $node = node_load($course_nid);

    if ($node->type == 'ntlp_course') {

        $user_role = check_user_permission($course_nid);
        if ($user_role == NTLP_ROLEID_SITEGUEST || isset($user->role[NTLP_ROLEID_SITEGUEST])) {
            drupal_goto('ntlp/goback');
        }
        $school_nid = get_course_school_nid($node->nid);
    } else if ($node->type == 'ntlp_group') {
        $school_nid = get_group_school_nid($node->nid);
    }
    $limit = 20;
    $topics = _get_course_forum_topics($course_nid, $limit, $header); # nid, title, author, comment_count, last_comment_timestamp

    foreach ($topics as $topic) {

        $created_time = (isset($topic->created) ? convert_datetime_tz($school_nid, $topic->created, true, DATE_FORMAT_LAST_SAVED) : '');
        $comment_time = (isset($topic->last_comment_timestamp) ? convert_datetime_tz($school_nid, $topic->last_comment_timestamp, true, DATE_FORMAT_LAST_SAVED) : '');

        $createdby_info = get_user($topic->uid);
        $last_commentby_info = get_user($topic->last_comment_uid);
        $createdby_name = l($createdby_info->first_name . ' ' . $createdby_info->last_name, 'ntlp/user/profile/' . $topic->uid);
        $last_commentby_name = l($last_commentby_info->first_name . ' ' . $last_commentby_info->last_name, 'ntlp/user/profile/' . $topic->uid);

        $stickyimage = '';
        if ($topic->sticky == 1) {
            $stickyimage = '<div class="stickyimage"> </div>';
        } else {
            $stickyimage = '<div class="stickyimagenull"> </div>';
        }


        $new_comment_counts = '';
        if ($data = comment_num_new($topic->nid)) {
            $new_comment_counts = '<br>[<font style="color:#5BB050;" >' . $data . ' new</font>]';
        }

        $topic_title = wordwrap($topic->title, 30, "\n");
        $rows[] = array(
            array('data' => '<div" >' . $stickyimage . '<span class="discuss_title" style="word-wrap: break-word;">' . l($topic_title, "ntlp/" . ($isGroups ? 'groups' : 'courses') . "/forum/view/$course_nid/$topic->nid") . '</span></div>'),
            array('data' => $topic->comment_count . $new_comment_counts, 'align' => 'center', 'style' => 'vertical-align:top;'),
            array('data' => 'Posted by ' . $createdby_name . ' on ' . $created_time, 'style' => 'vertical-align:top;'),
            array('data' => 'Posted by ' . $last_commentby_name . ' on ' . $comment_time, 'style' => 'vertical-align:top;'),
        );
    }
    $container = _get_node_forum_container_tid($course_nid);
//    $output .= l('Create new topic', "node/add/forum/$container", array('attributes'=>array('style'=>'float: right;','class'=>'SubmitAssignmentBtn'),'query'=>array('gids[]'=>$course_nid)));

    $output .= '<div style="float:left; padding: 10px 0 10px 0;">' . l('+ Create new topic', "ntlp/" . ($isGroups ? 'groups' : 'courses') . "/forum/topic/$course_nid/0", array('attributes' => array('style' => 'float: right;color:#090;'))) . '</div>';

    $output .= '
        <br clear="all" />
        <div style="font-size:5px;">&nbsp;</div><div class="student_Panel">
            <div id="ActivitiesCSS" style="width:auto">';

    $output .= theme('table', $header, $rows, $attributes);
    $output .= theme('pager', NULL, $limit, 0);
    $output .= '           
              </div>
            </div>';

    return $output;
}

function _ntlp_courses_forum_node_content($isGroups = false) {
    drupal_add_css(drupal_get_path('module', 'ntlp_courses_activity') . '/datepicker/jquery.ui.all.css');
    drupal_add_css(drupal_get_path('module', 'ckeditor') . '/ckeditor.css');

    drupal_add_js(drupal_get_path('module', 'ntlp_blocks') . '/discussion-forum.js');
    drupal_add_js(drupal_get_path('module', 'ckeditor') . '/ckeditor/ckeditor.js');
    drupal_add_js(drupal_get_path('module', 'ckeditor') . '/includes/ckeditor.utils.js');

    $tid = (int) arg(5);
    $topic = node_load($tid);
    return node_view($topic, FALSE, FALSE, TRUE);
}

//function ntlp_blocks_form_forum_node_form_alter(&$form, &$form_state) {
//    unset($form['author']);
//    unset($form['revision_information']);
//    unset($form['options']);
//    unset($form['comment_filter']);
//    unset($form['taxonomy']);
//    unset($form['body_field']['format']);
//    //unset($form['body_field']['teaser_include']);
//
//    $form['body_field']['body']['#rows'] = 5;
//    $form['body_field']['body']['#resizable'] = TRUE;
//
//    // remove "split summary at cursor" button and related elements if necessary
//    $form['body_field']['#after_build'] = NULL;
//    $form['body_field']['teaser_js'] = NULL;
//    $form['body_field']['teaser_include'] = NULL;
//    if(isset($form['body_field']['teaser_include'])) {
//        $form['body_field']['teaser_include']['#access'] = FALSE;
//    }
//
//    $form['#redirect'] = $_SERVER['HTTP_REFERER'];
////    unset($form['body_field']['format']);
////    unset($form['#theme']);
////    print_r($form);
//}

function _ntlp_course_forum_topic_add($isGroups = false) {
    return drupal_get_form('_ntlp_course_forum_topic_add_form', $isGroups);
}

function _ntlp_course_forum_topic_add_form($form_state, $isGroups = false) {

    include "forum_topics_comments_template.inc";

    $container_tid = check_plain(arg(6));
    $topic_status = 'New Topic';

    $form['topic'] = array(
        '#type' => 'fieldset',
    );

    $form['topic']['topic_status'] = array(
        '#type' => 'item',
        '#title' => '',
        '#prefix' => '<div style="float:left;width:200px; margi-bottom: 30px;" aling="left"><font style="color:#3570AA;font-size: 18px;" >' . $topic_status,
        '#suffix' => '</font></div>',
    );


    $form['topic']['info'] = array(
        '#type' => 'markup',
        '#title' => '',
        '#tree' => TRUE, // Don't forget to set #tree!
        '#prefix' => $HTMLform_groupbox_hdr, // This is our wrapper div.
        '#suffix' => $HTMLform_groupbox_ftr,
    );

    $form['topic']['info'] ['subject'] = array(
        '#type' => 'textfield',
        '#prefix' => '<table cellpadding="8" cellspacing="0" border="0" class="table" width="820px"><tr><th style="width:139px;" >' . t('Subject') . '</th><td>',
        '#suffix' => '</td>',
        '#size' => 30,
        '#required' => TRUE,
    );

    $form['topic']['info']['sticky'] = array(
        '#type' => 'checkbox',
        '#title' => 'Sticky',
        '#prefix' => '<td colspan="2">',
        '#suffix' => '</td></tr>',
    );

    $form['topic']['info']['body'] = array(
        '#type' => 'textarea',
        '#prefix' => '<tr><th style="width:139px;" >' . t('Description') . '</th><td colspan="3">',
        '#suffix' => '</td></tr>',
        '#rows' => 2,
        '#wysiwyg' => True,
    );

    $form['topic']['info']['container'] = array(
        '#type' => 'hidden',
        '#value' => $container_tid,
    );


    $form['topic']['info']['cancel'] = array(
        '#type' => 'button',
        '#value' => 'Cancel',
        '#attributes' => array('class' => 'CancelBtn', 'onclick' => "window.location = '?q=ntlp/" . ($isGroups ? 'groups' : 'courses') . "/forum/" . arg(5) . "';return false;"),
        '#prefix' => '<tr><td colspan="4" align="right">',
    );

    $form['topic']['info']['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Add New Topic',
        '#attributes' => array('class' => 'SubmitAssignmentBtn'),
        '#suffix' => '</td></tr></table></div>',
    );

    $form['#redirect'] = 'ntlp/' . ($isGroups ? 'groups' : 'courses') . '/forum/' . arg(5);

    return $form;
}

function _ntlp_course_forum_topic_add_form_submit($form, $form_state) {


    global $user;
    $subject = check_plain($form_state['clicked_button']['#post']['info']['subject']);
    $sticky = check_plain($form_state['clicked_button']['#post']['info']['sticky']);
    $body = $form_state['clicked_button']['#post']['info']['body'];
    $container = (int) $form_state['clicked_button']['#post']['info']['container'];

    if ($container) {
        $topic = new stdClass();
        $topic->type = 'forum';
        $topic->title = $subject;
        $topic->sticky = $sticky;
        $topic->body = $body;
        $topic->uid = $user->uid;
        $topic->status = 1;
        $topic->comment = 2;
        $topic->created = time();
        $topic->changed = time();
        $topic->nid = 0;

        node_save($topic);

        if ($topic->nid) {

            $term_obj = taxonomy_get_term($container);
            $term_array[] = $term_obj;
            taxonomy_node_save($topic, $term_array);
        }
    }
}

//function ntlp_blocks_form_comment_form_alter(&$form, &$form_state) {
//    $result = db_query(
//            'SELECT ot.nid course_id,n.nid topic_id FROM dpl_node n INNER JOIN dpl_og_term ot INNER JOIN dpl_term_node tn WHERE n.nid = %d AND ot.tid = tn.tid AND tn.nid = n.nid AND n.status = 1 AND n.type = \'forum\'',
//            $form['nid']['#value']
//    );
//
//    $topicObj = db_fetch_object($result);
//
//    unset($form['preview']);
//    $form['submit'] = array(
//        '#type' => 'submit',
//        '#value' => 'Save',
////        '#redirect' => '?q=ntlp/home',
//    );
////    unset($form['#submit']);
//    $form['#redirect'] = "ntlp/courses/forum/view/$topicObj->course_id/$topicObj->topic_id";
////    print_r($form);
////    print_r($form_state);
//}
###################################### FORUM FUNCTIONS END ##############################

function comment_delete_single($cid) {
    resource_comment_delete($cid);
}

function comment_add_single($nid) {
    global $user, $base_path;
    $nodeUser = db_fetch_object(db_query('SELECT * FROM {ntlp_user} WHERE uid = %d', $user->uid));
    $comment_subject = check_plain($_POST['commentSubject']);
    $comment_body = check_markup($_POST['commentBody']);
    $profile_link = l($nodeUser->first_name . ' ' . $nodeUser->last_name, 'ntlp/user/profile/' . $user->uid);
    $delete_button = '';

    $new_comment = array(
        'subject' => $comment_subject,
        'comment' => $comment_body,
        'uid' => $user->uid,
        'nid' => $nid,
        'status' => COMMENT_PUBLISHED,
        'timestamp' => time(),
        'cid' => 0, 'pid' => 0, 'format' => FILTER_FORMAT_DEFAULT,
    );
    $cid = comment_save($new_comment);
    $interval = format_interval(time() - $new_comment['timestamp']);

    // Delete Comment Button
    if (user_access('delete comment')) {
        $delete_button = "<a class='ntlp_tooltip_n' title='Delete Comment' id='comment_delete_$cid' onclick='delete_comment_single($cid)'></a>";
    } else if (is_comment_owner($cid, $user)) {
        $delete_button = "<a class='ntlp_tooltip_n' title='Delete Comment' id='comment_delete_$cid' onclick='delete_comment_single($cid)'></a>";
    }

    if ($cid) {
        $commentContent = <<<EOD
            <div class="LightGreenBox" id="comment-$cid">
                <table cellpadding="0" style="background-color:#d3ffc2" cellspacing="0" border="0" width="100%">
                        <tr>
                                <td class="LightGreenBoxTopLeft"></td>
                                <td></td>
                                <td class="LightGreenBoxTopRight"></td>
                        </tr>
                        <tr>
                                <td></td>
                                <td>
                                        <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                        <tr valign="top">
                                            <td class="LightGreenBoxPerson"><img src="{$base_path}{$user->picture}" height="32" width="32" /></td>
                                                <td class="LightGreenBoxText">
                                                <h6>$comment_subject<span>$comment_body</span></h6>
                                                <p>By $profile_link</p>
                                                <p>$interval ago</p>
                                                </td>
                                                <td class="LightGreenBoxDeletebtn">
                $delete_button
                                                </td>
                                        </tr>
                                        </table>
                                </td>
                                <td></td>
                        </tr>
                        <tr>
                                <td class="LightGreenBoxBottomRight"></td>
                                <td></td>
                                <td class="LightGreenBoxBottomRight"></td>
                        </tr>
                </table>
            </div>
EOD;

        echo json_encode(array(
            'cid' => $cid,
            'commentContent' => $commentContent,
            'error' => FALSE,
        ));
    } else {
        echo '"error":true';
    }
}

function insert_states() {

    $cities = array("ALABAMA"
        , "ALASKA"
        , "ARIZONA"
        , "ARKANSAS"
        , "CALIFORNIA"
        , "COLORADO"
        , "CONNECTICUT"
        , "DELAWARE"
        , "FLORIDA"
        , "GEORGIA"
        , "HAWAII"
        , "IDAHO"
        , "ILLINOIS"
        , "INDIANA"
        , "IOWA"
        , "KANSAS"
        , "KENTUCKY"
        , "LOUISIANA"
        , "MAINE"
        , "MARYLAND"
        , "MASSACHUSETTS"
        , "MICHIGAN"
        , "MINNESOTA"
        , "MISSISSIPPI"
        , "MISSOURI"
        , "MONTANA"
        , "NEBRASKA"
        , "NEVADA"
        , "NEW HAMPSHIRE"
        , "NEW JERSEY"
        , "NEW MEXICO"
        , "NEW YORK"
        , "NORTH CAROLINA"
        , "NORTH DAKOTA"
        , "OHIO"
        , "OKLAHOMA"
        , "OREGON"
        , "PENNSYLVANIA"
        , "RHODE ISLAND"
        , "SOUTH CAROLINA"
        , "SOUTH DAKOTA"
        , "TENNESSEE"
        , "TEXAS"
        , "UTAH"
        , "VERMONT"
        , "VIRGINIA"
        , "WASHINGTON"
        , "WEST VIRGINIA"
        , "WISCONSIN"
        , "WYOMING");

    $cities_short_titie = array("AL"
        , "AK"
        , "AZ"
        , "AR"
        , "CA"
        , "CO"
        , "CT"
        , "DE"
        , "FL"
        , "GA"
        , "HI"
        , "ID"
        , "IL"
        , "IN"
        , "IA"
        , "KS"
        , "KY"
        , "LA"
        , "ME"
        , "MD"
        , "MA"
        , "MI"
        , "MN"
        , "MS"
        , "MO"
        , "MT"
        , "NE"
        , "NV"
        , "NH"
        , "NJ"
        , "NM"
        , "NY"
        , "NC"
        , "ND"
        , "OH"
        , "OK"
        , "OR"
        , "PA"
        , "RI"
        , "SC"
        , "SD"
        , "TN"
        , "TX"
        , "UT"
        , "VT"
        , "VA"
        , "WA"
        , "WV"
        , "WI"
        , "WY"
    );

    $vocab_id = _get_vocab_vid("Network Regions");

    foreach ($cities_short_titie as $key => $city) {

        db_query("insert into {term_data} (vid, name, description, weight)
values	(%d, '%s', '%s', %d)", $vocab_id->vid, $city, $cities[$key], 0);
    }

    drupal_set_message('USA States inserted into taxonomy');
    drupal_goto('ntlp/school/management/general');
}

function ntlp_courses_open_frm() {
    global $user;

    if (isset($user->roles[NTLP_ROLEID_STUDENT]) || isset($user->roles[NTLP_ROLEID_PARENT])) {
        return drupal_get_form("ntlp_courses_open_form");
    } else {
        drupal_goto("ntlp/courses/my");
    }
//    get_teacher_courses_tab_content('teaching')
}

function ntlp_courses_open_form($form_state =null) {

    $form['courses_open'] = array(
        '#item' => 'fieldset',
    );

    $form['courses_open']['form'] = array(
        '#item' => 'item',
        '#value' => get_teacher_courses_tab_content('open'),
    );
    
    return $form;
}

//function course_home_navigate($course_nid) {
//
//    global $user;
//    $current_date =  date('Y/m/d', time());
//    if(isset($user->roles[NTLP_ROLEID_PARENT])) {
//        $url = 'ntlp/courses/agenda/'.$course_nid.'/'.$current_date;
//        drupal_goto($url);
//    }else {
//        $url = 'ntlp/courses/home/'.$course_nid;
//        drupal_goto($url);
//    }
//}

