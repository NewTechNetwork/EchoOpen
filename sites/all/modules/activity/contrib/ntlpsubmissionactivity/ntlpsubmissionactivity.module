<?php
// Echo Open software Copyright Â© 2012 KnowledgeWorks Foundation
// ECHO OPEN trademark and logo are trademarks of New Technology Network LLC
// The Echo Open software is licensed under the GNU GPLv2.  For licensing information // please contact New Technology Network Licensing at: // webmaster@newtechnetwork.org or 935 Clinton Street, Napa, CA 94559.


// $Id: ntlpsubmissionactivity.module,v 1.1.4.7 2009/04/21 08:51:21 jaydub Exp $

/**
 * Activity definition file
 *
 * This defines what hooks activity module should use
 */
function ntlpsubmissionactivity_activity_info() {
  return array(
    'ops' => array( 'grade' => t('Grade'),
                    'submit' => t('Submit')),
    'types' => array(
      'submissionaction' => t('Activity Submission Action'),
    ),
    'roles' => array(
      'author' => array(
        '#name' => t('Author'),
        '#description' => t('The person who made the submission.'),
        '#default' => array(
            'grade' => '[author-fullname] graded the [ntlp-node-title] activity',
            'submit' => '[author-fullname] made the [ntlp-node-title] activity submission',
        ),
      ),
      // This is what corresponds to ACTIVITY_ALL
      'all' => array(
        '#name' => t('All'),
        '#description' => t('The general public.'),
        '#default' => array(
            'grade' => '[author-fullname] graded the [ntlp-node-title] activity',
            'submit' => '[author-fullname] made the [ntlp-node-title] activity submission',
        ),
      ),
    ),
  );
}

/** 
 * Implementation of hook_activityapi().
 */
function ntlpsubmissionactivity_activityapi(&$activity, $op) {
    if (in_array($activity['module'], array('ntlpsubmissionactivity', 'nodeactivity', 'commentactivity', 'flagactivity', 'ntlpgroupactivity', 'ntlpprojectactivity'))
            && $op == 'insert') {
        if (isset($activity['data']['node-context'])) {
            db_query("INSERT INTO {ntlp_activity_context} (aid, cid) VALUES ({$activity['aid']}, {$activity['data']['node-context']})");
        }
    }
//    watchdog('activity', 'Module:'.$activity['module'].', Context:'.print_r($activity, true));

}

/**
 * Token module integration. Defines available default tokens.
 */
function ntlpsubmissionactivity_token_list($type = 'all') {

    if ($type == 'ntlpsubmissionactivity') {
        $tokens['ntlpsubmissionactivity'] = array(
          'node-id' 	=> t('Id of the post'),
          'node-title' 	=> t('Title of the post'),
          'node-link' 	=> t('Link to the post'),
          'node-type' 	=> t('The node type of the post'),
        );
//        return $tokens;
    }
    $tokens['global']['context-title'] = t('Displays context title');
    $tokens['global']['author-fullname'] = t('Displays author full name');
    $tokens['global']['ntlp-node-title'] = t('Displays the appropriate node title');
    $tokens['global']['comment-node-type'] = t('Displays the linked comment parent node title');
    
    $tokens['global']['CourseName'] = t('Displays the relevant course with the link to its home page');
    $tokens['global']['AnnouncementContent'] = t('Displays the course announcement content');
    $tokens['global']['AuthorName'] = t('Displays author full name');
    $tokens['global']['AuthorFullName'] = t('Displays author full name');
    $tokens['global']['ActivityName'] = t('Displays course activity title');
    $tokens['global']['ProjectName'] = t('Displays course project title');
    $tokens['global']['ActivityWorkName'] = t('Displays course activity title with link to its work & assessment tab');
    $tokens['global']['StudentName'] = t('Displays student name of the graded activity');
    $tokens['global']['ItemType'] = t('Displays the name of the item type');
    $tokens['global']['GroupName'] = t('Displays the relevant course with the link to its home page');
    $tokens['global']['EventTitle'] = t('Displays the event title');

    return $tokens;
}

/**
 * Token module integration. Defines available default token values.
 */
function ntlpsubmissionactivity_token_values($type, $data = NULL, $options = array()) {

    global $user, $base_path, $base_url;

    $url_options['absolute'] = true;

    $link_class = array('attributes' => array('class' => 'tipsygreenlinks'));
    if ($type == 'ntlpsubmissionactivity' && !empty($data)) {
        $data['node-type'] = theme('activity_node_type', $data['node-type']);
        $data['node-link'] = l($data['node-title'], 'node/'. $data['node-id'], $link_class);
        return $data;
    }

    if ($type == 'activity' && !empty($data)) {
	unset($data['operation']);

        $user_obj = get_user_detail_($data['uid']);

        $load_context = true;
        
        if (isset($data['comment-cid']) || $data['hook'] == 'comment') {

            $comment_post_node_id = $data['parent-node-id'];
            $comment_post_node_type = $data['parent-node-type'];

            if ($data['hook'] == 'comment' && $data['op'] == 'insert') {//for comment email notification case
                $comment_post_node_id = $data['node-id'];
                $comment_node = node_load($comment_post_node_id);
                $comment_post_node_type = $comment_node->type;
            }

            switch ($comment_post_node_type) {
                case 'lo_image':
                case 'lo_link':
                case 'lo_video':
                case 'lo_page':
                case 'lo_document':
                case 'lo_share_idea':
                    $comment_node_owner = get_resource_owner ($comment_post_node_id)->course_nid;
                    break;

                case 'ntlp_forum':
                    $container_obj = db_fetch_object(forum_topic_container($comment_post_node_id));
                    $comment_node_owner =  $container_obj->course_nid;
                    break;

                case 'ntlp_library_project':
                    $load_context = false;
                    break;

            }
            
        }

        if ($data['module'] == 'flagactivity') {
            $comment_node_owner = get_resource_owner ($data['content-id'])->course_nid;
        }

        if ($data['flag'] == 'likethispost') {
            $data['node-context'] = get_resource_owner ($data['content_id'])->course_nid;
        }

        if ($load_context && isset($data['node-context'])) {
            
            if (isset($comment_node_owner))
                $node_context = $comment_node_owner;
            else
                $node_context = $data['node-context'];

            $context_node = node_load($node_context);
            switch ($context_node->type) {
                case 'ntlp_course':
                    
                    $recipient_user_uid = (isset($data['recipient_uid'])) ? $data['recipient_uid'] : $user->uid;

                    if (get_user_role($recipient_user_uid)->rid == NTLP_ROLEID_PARENT) {
                        $parent_student_result = get_parent_student_records($recipient_user_uid, $node_context);
                        if ($parent_student_result->num_rows > 0) {
                            while ($record = db_fetch_object($parent_student_result)) {
                                $student_recipient[] = l("{$record->first_name} {$record->last_name}", url('ntlp/user/profile/', $url_options) . $record->user_uid, $link_class);
                            }
                        }
                    }

                    if (isset($student_recipient) && sizeof($student_recipient) > 0) {
                        $students_name = implode(', ', $student_recipient);
                        $data['ForStudent'] = ' for '.$students_name;
                    } else {
                        $data['ForStudent'] = '';
                    }
                    
                    $context_link = 'ntlp/courses/home/';
                    $data['CourseName'] = l($context_node->title, url($context_link, $url_options) . $context_node->nid, $link_class);
                    break;
                case 'ntlp_group':
                    $context_link = 'ntlp/groups/home/';
                    $data['GroupName'] = l($context_node->title, url($context_link, $url_options) . $context_node->nid, $link_class);
                    $data['GoToGroupPage'] = l($context_node->title, url('ntlp/groups/edit/', $url_options) . $context_node->nid . '/members', $link_class);
                    $data['ApproveDenyRequest'] = l('Approve or deny the request here', url('ntlp/groups/edit/', $url_options) . $context_node->nid . '/members', $link_class);
                    break;

                case 'ntlp_library_project':
                    $data['ProjectName'] = l($data['parent-node-title'], url('ntlp/library/project/view/', $url_options) . $data['parent-node-id'], $link_class);
                    $data['NetworkProjectLibrary'] = l("Network Project Library", url('ntlp/library/project', $url_options), $link_class);
                    break;

            }

            if (!empty($context_link))
                $data['context-title'] = l($context_node->title, url($context_link, $url_options) . $context_node->nid, $link_class);
            else
                $data['context-title'] = $context_node->title;
        }

        $data['author-fullname'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);
        $data['AuthorFullName'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);
        $data['AuthorName'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);

        if (isset($data['parent-node-type']) && $data['type'] == 'comment') {
            $node_type = $data['parent-node-type'];
            $node_obj = node_load($data['parent-node-id']);
            $data['ItemType'] = theme('activity_node_type', $data['parent-node-type']);
        }
        elseif (isset($data['content-id']) && $data['module'] == 'flagactivity') {
            $node_type = $data['node-type'];
            $node_obj = node_load($data['content-id']);
            $data['ItemType'] = theme('activity_node_type', $node_obj->type);
        }
        else {
            $node_obj = node_load($data['node-id']);
            $node_type = $node_obj->type;
            $data['ItemType'] = theme('activity_node_type', $node_type);
        }

        if ($data['flag'] == 'likethispost') {
            $node_obj = node_load($data['content_id']);
            $data['ItemType'] = theme('activity_node_type', $node_obj->type);
            $node_type = $node_obj->type;

            $user_obj = get_user_detail_($user->uid);

            //again set the proper author name
            $data['author-fullname'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);
            $data['AuthorFullName'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);
            $data['AuthorName'] = l("{$user_obj->first_name} {$user_obj->last_name}", url('ntlp/user/profile/', $url_options) . $data['uid'], $link_class);

        }

        switch ($node_type) {
            case 'lo_image':
            case 'lo_link':
            case 'lo_video':
            case 'lo_page':
            case 'lo_document':
            case 'lo_share_idea':
                $data['ntlp-node-title'] = l("Share Stuff post", url('ntlp/courses/home/', $url_options) . $node_context, $link_class);
                $data['comment-node-type'] = l("Share Stuff post", url('ntlp/courses/home/', $url_options) . $node_context, $link_class);
                break;

            case 'lo_journal':
            case 'lo_task':
            case 'lo_workshop':

            case 'ntlp_announcement':
                $data['ntlp-node-title'] = l("Course Announcement", url('ntlp/courses/home/', $url_options) . $node_context, $link_class);
                $announcement = $node_obj->body;
                if (strlen($node_obj->body) > 100) {
                    $morelink = l("more", url('ntlp/courses/home/', $url_options) . $node_context, $link_class);
                    $data['AnnouncementContent'] = substr($announcement, 0, 100) . '...' . $morelink;
                } else {
                    $data['AnnouncementContent'] = $announcement;
                }
                break;

            case 'ntlp_project':
                $data['ProjectName'] = l($node_obj->title, url('ntlp/courses/projects/', $url_options) . $node_context . '/' . $node_obj->nid, $link_class);
                break;

            case 'ntlp_school_event':
            case 'ntlp_network_event':
                $data['EventTitle'] = l($node_obj->title, url('ntlp/events/open/', $url_options) . $node_obj->nid, $link_class);

                $school_nid = get_this_school();
                if ($node_obj->event['start'] == $node_obj->event['end'])
                    $data['EventDate'] = get_tz($school_nid, 'm/d/Y',$node_obj->event['start']);
                else
                    $data['EventDate'] = get_tz($school_nid, 'm/d/Y', $node_obj->event['start']) .
                                            " - " . get_tz($school_nid, 'm/d/Y', $node_obj->event['end']);


                break;

            case 'ntlp_forum':
                $data['ItemType'] = l($node_obj->title, url('ntlp/courses/forum/view/', $url_options) . $context_node->nid . '/' . $node_obj->nid, $link_class);;
                break;

            case 'ntlp_library_project':
                $data['ProjectName'] = l($data['node-title'], url('ntlp/library/project/view/', $url_options) . $data['node-id'], $link_class);
                $data['NetworkProjectLibrary'] = l("Network Project Library", url('ntlp/library/project', $url_options), $link_class);
                break;
        }

        return $data;
    }

}


function ntlpsubmissionactivity_submit($op, $activity_id, $graded_user, $uid) {

    switch ($op) {
    case 'grade':
    case 'submit':

      $node = node_load($activity_id);
      $type = 'submissionaction';
      
      // Check if both type and operation are
      // enabled for activity. If not then stop here
      if (!in_array($type, variable_get('ntlpsubmissionactivity_token_types', array($type)), TRUE) ||
        !in_array($op, variable_get('ntlpsubmissionactivity_op_types', array($op)), TRUE)) {
        return FALSE;
      }

      // Privacy setting check
      $user = user_load(array('uid' => $uid));
      if (activity_user_privacy_optout($user)) {
        return FALSE;
      }

      // User hide activity permission check
      if (user_access('hide activity', $user)) {
        return FALSE;
      }

      $data = array(
        'operation' 	=> $op,
        'node-id'       => $node->nid,
        'node-title' 	=> $node->title,
        'node-type' 	=> $node->type,
        'node-context'  => $node->nid,
        'graded-user'  => $graded_user,
      );

      $target_users_roles = array(
          ACTIVITY_ALL => 'all',
          $node->uid => 'author'
        );

      activity_insert($user->uid, 'ntlpsubmissionactivity', $type, $op, $data, $target_users_roles);

      if ($op == 'grade') {
          $node->graded_user = $graded_user;
          module_invoke_all('ntlpcontent', $node, 'activity_graded');
      }

      break;
  }
}

/**
 * Implementation of hook_menu().
 */
function ntlpsubmissionactivity_menu() {
  $items = array();

  $items['activity/og'] = array(
    'title' => 'My groups activity',
    'page callback' => 'ntlpsubmissionactivity_page',
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'user_access',
    'access arguments' => array('view own activity'),
  );
    
  return $items;
}


