<?php
// Echo Open software Copyright © 2012 KnowledgeWorks Foundation
// ECHO OPEN trademark and logo are trademarks of New Technology Network LLC
// The Echo Open software is licensed under the GNU GPLv2.  For licensing information // please contact New Technology Network Licensing at: // webmaster@newtechnetwork.org or 935 Clinton Street, Napa, CA 94559.


/* 
 * Provides Google Apps feeds based services as block for Documents and Sites for NTLP with OAuth2
 * Copyright © 2009 Shahbaz Ahmer <shahbaz.ahmer@parallelmode.com>
 * 
 * $Id: gapps_feeds.info 11 2009-12-20 03:15:00Z shahbaz.ahmer@parallelmode.com $
 * 
 */

require_once("docs.contents.inc");
require_once("sites.contents.inc");
/**
* Valid permissions for this module
* @return array An array of valid permissions for the gapps_feeds module
*/

function gapps_feeds_perm() {
  return array('view google apps blocks');
} // function gapps_feeds_perm()

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned by arg()
* @return help text for the path
*/
function gapps_feeds_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#gapps_feeds":
      $output = '<p>'.  t("Provides Google Apps feeds based services as block for Documents and Sites for NTLP with OAuth2") .'</p>';
      break;
    case "admin/settings/gapps_feeds":
      $output = t(<<<END
<p>Provides Google Apps feeds based services as block for Documents and Sites for NTLP with OAuth2</p>
END
);
      break;
  }
  return $output;
} // function gapps_feeds_help

function gapps_feeds_block($op = 'list', $delta = 0, $edit = array()) {
  // The $op parameter determines what piece of information is being requested.
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator,
      // end users will not see these descriptions.
      $blocks[0] = array(
        'info'       => t('Google Apps block'),
        'status'     => TRUE,
        'weight'     => 0,
        'visibility' => 1,
        'pages'      => 'node/*',
      );
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
/*      if ($delta == 0) {
        // All we need to provide is a text field, Drupal will take care of
        // the other block configuration options and the save button.
        $form['gapps_feeds_string'] = array(
          '#type' => 'textfield',
          '#title' => t('Block contents'),
          '#size' => 60,
          '#description' => t('This string will appear in the example block.'),
          '#default_value' => variable_get('block_example_string',  t('Some example content.')),
        );
      }*/
      return $form;
    case 'save':
/*      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      if ($delta == 0) {
        // Have Drupal save the string to the database.
        variable_set('block_example_string', $edit['block_example_string']);
      }
      return;*/
    case 'view': default:
      // If $op is "view", then we need to generate the block for display
      // purposes. The $delta parameter tells us which block is being requested.
      switch ($delta) {
        case 0:
          // The subject is displayed at the top of the block. Note that it
          // should be passed through t() for translation.
          $block['subject'] = t('Google Apps block');
          // The content of the block is typically generated by calling a custom
          // function.
          $block['content'] = get_gapps_contents();
          break;
      }
      return $block;
  }
}


function get_gapps_contents_for_home() {
    global $user;
    $output = "";

    include "gapps_template.inc";
    drupal_add_js(drupal_get_path('module', 'gapps_feeds').'/gapps_feeds.js');
    
    $sid = get_user_schoolrec($user->uid, true);
    if ($sid) {
//        print_r($sid);
        $gmail = $sid->gmail_status;
        $gdocs = $sid->gdocs_status;
        $gsite = $sid->gsite_status;
//        $output = "[$gmail, $gdocs, $gsite]";
        if ($gmail || $gdocs || $gsite) {
            $output .= '<div class="googleRoundedCornerLeft" style="background-color:#3591cb">
                        <div class="googleRoundedCornerRight">
                      <table cellpadding="0" cellspacing="0" border="0" width="100%">
                      <tr>
                        <td colspan="2" class="googleHeadingBg"><div class="GoogleApps" style="float:left; color:white">Google Apps</div><div align="right" style="float:right;"><img src="'.$base_path.'themes/Boldr/Images/GoogleTopRight.jpg" /></div></td>
                      </tr>'.
//                        ($gmail ? ('<tr><td colspan="2">'.get_gmail_block_contents().'</td></tr>') : '');
                        ($gmail ? ('<tr><td colspan="2" id ="gmail_block">'.$HTML_GMAIL.'</td></tr>') : '');

            if ($gdocs && !$gsite) {
//                $output .= '<tr><td style="padding-left:10px;padding-right:10px">' . get_gdocs_block_contents() . '</td></tr>';
                $output .= '<tr><td style="padding-left:10px;padding-right:10px" id ="gdocs_block"> '.$HTML_DOCS.'</td></tr>';
            } elseif (!$gdocs && $gsite) {
                $output .= '<tr><td style="padding-left:10px;padding-right:10px" id ="gsites_block"> '.$HTML_SITES.'</td></tr>';
            } elseif ($gdocs && gsite) {
                $output .= '<tr><td style="width:50%;padding-left:10px;padding-right:5px" id ="gdocs_block" > '.$HTML_DOCS.'</td>'.
                        '<td style="width:50%;padding-left:5px;padding-right:10px;" id ="gsites_block" > '.$HTML_SITES.'</td></tr>';
            }
            $output .= '</table></div></div>';
        }
    } else {
        $output = "You do not have permissions to view this page. You are not associated with an active NTLP School.";
    }
    return $output;
}

function get_gapps_contents() {
    global $user;
    $output = "";
    $sid = get_user_schoolrec($user->uid, true);
    if ($sid) {
//        print_r($sid);
        $gmail = $sid->gmail_status;
        $gdocs = $sid->gdocs_status;
        $gsite = $sid->gsite_status;
//        $output = "[$gmail, $gdocs, $gsite]";
        if ($gmail || $gdocs || $gsite) {
            $output .= '<div class="googleRoundedCornerLeft" style="background-color:#3591cb">
                        <div class="googleRoundedCornerRight">
                      <table cellpadding="0" cellspacing="0" border="0" width="100%">
                      <tr>
                        <td colspan="2" class="googleHeadingBg"><div style="float:left"><img src="'.$base_path.'themes/Boldr/Images/GoogleLogo.jpg" width="53" height="60" alt="google logo" /></div><div class="GoogleApps" style="float:left">Google Apps</div><div align="right" style="float:right;"><img src="'.$base_path.'themes/Boldr/Images/GoogleTopRight.jpg" /></div></td>
                      </tr>'.
                        ($gmail ? ('<tr><td colspan="2">'.get_gmail_block_contents().'</td></tr>') : '');

            if ($gdocs && !$gsite) {
                $output .= '<tr><td style="padding-left:10px;padding-right:10px">' . get_gdocs_block_contents() . '</td></tr>';
            } elseif (!$gdocs && $gsite) {
                $output .= '<tr><td style="padding-left:10px;padding-right:10px">' . get_gsites_block_contents() . '</td></tr>';
            } elseif ($gdocs && gsite) {
                $output .= '<tr><td style="width:50%;padding-left:10px;padding-right:5px">' .
                    get_gdocs_block_contents() . '</td>'.
                        '<td style="width:50%;padding-left:5px;padding-right:10px;">' .
                    get_gsites_block_contents() . '</td></tr>';
            }
            $output .= '</table></div></div>';
        }
    } else {
        $output = "You do not have permissions to view this page. You are not associated with an active NTLP School.";
    }
    return $output;
}
/**
 * Joins key:value pairs by inner_glue and each pair together by outer_glue
 * @param string $inner_glue The HTTP method (GET, POST, PUT, DELETE)
 * @param string $outer_glue Full URL of the resource to access
 * @param array $array Associative array of query parameters
 * @return string Urlencoded string of query parameters
 */
function implode_assoc($inner_glue, $outer_glue, $array) {
  $output = array();
  foreach($array as $key => $item) {
    $output[] = $key . $inner_glue . urlencode($item);
  }
  return implode($outer_glue, $output);
}

?>